import React from 'react'
import style from "./index.css"
import {connect} from 'react-redux'
import {Modal, Input, Select, Form, AutoComplete, Button, Row, Col} from 'antd';
import {bindActionCreators} from 'redux'
import {hashHistory} from 'react-router'
import {hideAuth, showLogin} from '../../../../actions/auth'
import {register} from '../../../../actions/user'
import Countdown from '../../../countdown/index'
import Toast from 'antd-mobile/lib/toast';
import 'antd-mobile/lib/toast/style/css';
import axios from '../../../../common/axiosConf'


const confirm = Modal.info;
const FormItem = Form.Item;
const Option = Select.Option;


function handleChange(value) {
    console.log(`selected ${value}`);
}

class RegisterBox extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            visible: true,
            picImg: this.getPicImg(),
            areaCode: ["86"],
            phone: ''
        }
    }

    componentDidMount(){
        axios.get('http://192.168.100.105:8000/captcha')
            .then(function(response){
                console.log(11,response);
            })
            .catch(function(err){
                console.log(11,err);
            });
    }
    hideModal = () => {
        this.props.hideAuth()
        // this.setState({
        //     visible: false,
        // });
    }
    handleSubmit = (e) => {
        e.preventDefault();
        this.props.form.validateFieldsAndScroll((err, values) => {
            if (!err) {
                Toast.loading('', 0, null, false)
                this.props.register({
                    phone: this.state.areaCode + " " + this.state.phone,
                    pwd: this.state.password,
                    code: this.state.code
                }, (errorText) => {
                    Toast.hide()
                    this.setState({picImg: this.getPicImg()})
                    if (errorText) {
                        Toast.info(errorText, 3, null, false)
                    } else {
                        this.props.hideAuth()

                    }
                })
            }
        });
    }
    handleConfirmBlur = (e) => {
        const value = e.target.value;
        this.setState({confirmDirty: this.state.confirmDirty || !!value});
    }
    checkPassword = (rule, value, callback) => {
        const form = this.props.form;
        if (value && value !== form.getFieldValue('password')) {
            callback('两次输入的密码不同!');
        } else {
            callback();
        }
    }
    checkConfirm = (rule, value, callback) => {
        const form = this.props.form;
        if (value && this.state.confirmDirty) {
            form.validateFields(['confirm'], {force: true});
        }
        callback();
    }
    checkPhone = (getFieldError, getFieldValue) => {
        let flag = false
        this.props.form.validateFields(['phone', 'authCode'], (err) => {
            if (!err) {
                flag = true
            }
        });

        return flag
    }

    getPicImg() {
        return <div dangerouslySetInnerHTML={{__html: `<svg xmlns="http://www.w3.org/2000/svg" width="150" height="50"><path d="M2 9 C71 13,82 17,143 35" stroke="#555" fill="none"/><path fill="#222" d="M29.61 39.83L29.71 39.94L29.55 39.78Q27.76 39.89 25.74 40.08L25.76 40.10L25.59 39.93Q26.39 34.83 26.39 30.00L26.32 29.92L26.28 29.88Q26.26 24.95 25.61 19.73L25.72 19.84L25.64 19.76Q21.01 19.32 17.81 17.64L17.82 17.65L17.08 15.88L17.11 15.92Q16.93 15.44 16.33 14.22L16.38 14.27L16.46 14.36Q21.51 17.01 27.53 17.20L27.48 17.15L27.47 17.14Q33.31 17.27 38.75 15.21L38.85 15.31L38.72 15.18Q38.12 16.72 37.48 18.54L37.50 18.56L37.37 18.44Q33.82 19.80 29.56 19.99L29.59 20.02L29.61 20.05Q29.37 25.02 29.37 29.97L29.32 29.92L29.37 29.97Q29.23 34.78 29.54 39.77ZM39.48 14.57L39.37 14.46L39.52 14.61Q33.64 16.84 27.43 16.65L27.48 16.69L27.39 16.61Q20.79 16.47 15.69 13.50L15.70 13.52L15.75 13.56Q16.42 14.77 17.71 18.04L17.63 17.96L17.67 18.00Q18.38 18.37 19.64 18.94L19.68 18.98L19.69 18.99Q19.92 19.68 20.26 21.20L20.18 21.12L20.25 21.19Q22.42 21.92 25.47 22.14L25.52 22.19L25.64 22.31Q25.99 25.97 25.99 29.74L25.97 29.73L25.97 29.72Q25.88 35.01 25.08 40.37L25.14 40.43L25.09 40.38Q26.87 40.38 27.41 40.38L27.42 40.39L27.43 40.40Q27.24 40.52 27.19 41.18L27.26 41.25L27.27 41.27Q27.20 41.92 27.20 42.26L27.15 42.22L27.22 42.28Q28.40 42.20 29.92 42.28L30.00 42.36L29.91 42.27Q30.91 42.40 32.74 42.55L32.61 42.42L32.72 42.53Q31.40 37.52 31.29 32.34L31.40 32.45L31.24 32.29Q31.10 26.98 31.63 22.07L31.70 22.13L31.70 22.13Q35.61 21.55 38.77 20.34L38.84 20.40L38.89 20.45Q39.60 18.08 40.63 16.02L40.64 16.03L40.62 16.02Q39.20 16.61 38.40 16.91L38.43 16.95L38.33 16.84Q38.96 15.76 39.53 14.62Z"/><path fill="#222" d="M83.17 19.39L83.14 19.36L83.08 19.30Q84.01 23.62 84.16 27.20L84.14 27.17L84.22 27.25Q85.31 27.31 86.37 27.31L86.23 27.17L88.42 27.16L88.56 27.29Q89.53 27.20 90.41 25.79L90.35 25.73L90.51 25.90Q91.17 24.65 91.29 23.47L91.24 23.42L91.22 23.40Q91.62 20.42 87.39 19.92L87.49 20.01L87.34 19.87Q85.84 20.00 83.21 19.43ZM84.17 29.95L84.17 29.94L84.23 30.01Q84.13 36.19 82.99 40.60L82.86 40.47L83.03 40.65Q81.54 41.02 79.22 42.09L79.26 42.13L79.16 42.03Q81.51 35.35 81.24 28.08L81.24 28.08L81.37 28.21Q81.00 20.76 78.22 14.33L78.19 14.29L78.11 14.22Q82.40 17.13 88.64 17.13L88.56 17.05L88.63 17.12Q94.61 17.05 94.76 20.51L94.77 20.52L94.72 20.47Q94.90 23.01 93.91 25.67L93.88 25.64L93.81 25.57Q93.45 26.74 92.50 27.96L92.48 27.94L92.51 27.97Q91.13 29.52 88.58 29.79L88.59 29.79L88.70 29.90Q86.51 30.00 84.27 30.04ZM90.39 32.29L90.25 32.15L90.30 32.19Q94.39 32.36 95.65 27.57L95.78 27.70L95.61 27.53Q96.65 23.96 96.49 21.94L96.53 21.98L96.48 21.92Q96.45 20.49 95.69 19.50L95.69 19.50L95.63 19.44Q95.19 19.00 94.70 18.77L94.77 18.85L94.76 18.83Q94.77 18.69 94.16 17.93L94.16 17.93L94.15 17.92Q92.68 16.67 88.72 16.67L88.68 16.64L88.63 16.59Q81.71 16.56 77.49 13.40L77.64 13.56L77.49 13.41Q80.65 20.49 80.92 27.95L80.89 27.92L81.00 28.03Q81.22 35.63 78.55 42.71L78.60 42.76L78.71 42.88Q79.68 42.13 80.67 41.75L80.74 41.81L80.25 42.85L80.32 42.92Q80.02 43.38 79.75 43.95L79.77 43.97L79.85 44.05Q82.26 42.99 85.15 42.46L85.23 42.54L85.25 42.56Q86.02 36.97 86.10 32.25L85.99 32.14L86.11 32.27Q87.18 32.16 88.17 32.16L88.19 32.17L88.23 32.22Q89.50 32.16 90.30 32.19ZM89.30 22.21L89.32 22.23L89.31 22.21Q89.92 22.34 90.91 22.57L90.90 22.55L90.91 22.57Q90.94 22.71 90.98 23.01L90.95 22.98L90.95 22.99Q91.01 23.26 90.93 23.53L90.87 23.47L90.90 23.50Q90.83 24.77 90.11 25.64L90.12 25.66L90.13 25.67Q89.54 26.71 88.52 26.90L88.56 26.95L88.56 26.95Q87.83 26.94 86.19 26.94L86.02 26.77L86.07 26.81Q86.08 24.58 85.85 22.22L85.91 22.29L87.66 22.36L87.53 22.23Q88.50 22.36 89.38 22.28Z"/><path fill="#222" d="M57.81 40.13L57.79 40.11L57.78 40.11Q56.08 40.19 54.40 40.76L54.38 40.74L54.27 40.63Q54.96 37.16 55.07 34.04L54.93 33.91L55.03 34.00Q55.12 30.93 54.89 27.27L54.93 27.31L54.79 27.18Q53.39 26.80 52.62 26.42L52.76 26.56L52.39 23.55L52.33 23.50Q53.10 24.16 54.70 24.73L54.58 24.61L54.59 24.61Q54.46 22.58 54.04 19.84L54.00 19.80L53.97 19.77Q56.38 20.58 58.02 20.43L57.89 20.30L57.82 24.96L57.87 25.01Q59.15 24.80 60.49 24.31L60.65 24.47L60.62 24.44Q60.46 25.23 60.23 26.98L60.27 27.02L60.34 27.09Q58.80 27.41 57.77 27.41L57.76 27.41L57.68 27.32Q57.83 29.64 57.83 33.91L57.69 33.77L57.73 33.81Q57.79 38.02 57.87 40.19ZM60.91 23.74L61.02 23.85L60.90 23.73Q60.70 23.91 60.09 24.14L60.13 24.18L60.42 21.31L60.46 21.35Q59.60 21.59 58.19 21.82L58.27 21.90L58.21 21.84Q58.35 21.29 58.50 19.92L58.36 19.79L58.46 19.88Q57.88 19.99 57.31 19.99L57.24 19.92L57.27 19.94Q55.14 19.95 53.51 19.23L53.52 19.24L53.49 19.21Q54.05 21.75 54.32 24.23L54.28 24.19L54.32 24.24Q53.32 23.77 51.80 22.74L51.95 22.89L51.76 22.70Q52.28 24.18 52.51 26.88L52.35 26.71L52.38 26.75Q52.83 26.97 54.01 27.39L53.99 27.36L54.15 27.52Q54.15 28.14 54.19 29.55L54.08 29.44L54.53 29.54L54.69 29.62L54.56 29.50Q54.61 30.73 54.61 31.91L54.74 32.03L54.64 31.94Q54.63 36.88 53.83 41.22L53.83 41.21L53.91 41.29Q54.03 41.11 55.97 40.58L55.94 40.54L55.95 40.56Q55.98 41.23 55.86 42.60L55.89 42.63L55.96 42.70Q56.73 42.59 57.53 42.59L57.43 42.49L57.59 42.65Q59.17 42.52 60.81 43.10L60.89 43.17L60.80 43.08Q59.55 37.45 59.74 29.53L59.74 29.54L62.11 29.13L62.15 29.17Q62.14 28.17 62.22 27.14L62.30 27.22L62.51 25.23L62.48 25.19Q61.84 25.40 60.66 25.85L60.78 25.97L60.82 26.01Q61.04 24.60 60.97 24.25L61.02 24.31L60.98 24.27Q60.90 24.00 60.98 23.81Z"/><path fill="#333" d="M122.09 28.67L122.19 28.77L116.15 28.71L116.23 28.79Q113.21 28.74 110.28 28.66L110.36 28.74L110.44 28.83Q110.54 35.51 108.48 41.03L108.39 40.94L108.37 40.92Q106.51 41.38 104.76 42.06L104.77 42.08L104.89 42.19Q107.55 36.36 107.55 29.70L107.68 29.83L107.67 29.83Q107.61 21.27 103.50 14.23L103.48 14.22L103.47 14.20Q104.92 14.93 107.39 15.73L107.54 15.87L107.47 15.80Q109.58 20.85 110.12 25.72L110.07 25.68L110.19 25.79Q113.42 26.25 116.28 26.21L116.26 26.19L116.23 26.16Q118.96 26.22 122.27 25.96L122.13 25.82L122.09 25.78Q122.61 21.43 124.37 16.33L124.49 16.45L124.49 16.45Q126.24 15.84 128.49 15.01L128.61 15.13L128.53 15.04Q125.01 21.88 125.01 29.84L125.04 29.87L124.92 29.75Q125.01 36.04 127.37 41.37L127.39 41.40L127.27 41.27Q125.63 40.63 123.58 40.32L123.64 40.39L123.69 40.43Q121.96 35.35 122.07 28.65ZM123.37 40.72L123.48 40.84L123.42 40.77Q124.51 40.99 125.62 41.26L125.56 41.20L125.56 41.20Q125.95 41.98 126.60 43.46L126.61 43.47L126.43 43.29Q129.88 44.35 131.67 45.26L131.67 45.25L131.60 45.18Q127.15 39.02 126.84 30.76L126.94 30.85L126.93 30.84Q126.65 22.84 130.30 16.02L130.33 16.05L129.14 16.38L129.24 16.48Q128.79 16.75 128.18 16.90L128.16 16.88L128.05 16.78Q128.47 15.98 129.31 14.42L129.32 14.43L129.32 14.43Q126.68 15.48 124.05 15.97L124.11 16.04L124.11 16.03Q122.34 20.77 121.88 25.46L121.96 25.53L121.97 25.54Q119.44 25.72 117.00 25.72L117.10 25.81L117.09 25.80Q114.58 25.69 112.07 25.54L112.01 25.48L112.10 25.57Q111.81 22.24 110.71 18.17L110.86 18.31L110.86 18.31Q110.05 18.07 108.60 17.69L108.58 17.67L108.66 17.76Q108.26 16.51 107.80 15.48L107.84 15.52L107.71 15.40Q105.14 14.80 102.85 13.54L102.75 13.45L102.82 13.52Q107.40 20.94 107.40 29.74L107.37 29.72L107.41 29.75Q107.40 36.71 104.28 42.84L104.30 42.86L104.13 42.69Q104.87 42.44 106.20 41.87L106.26 41.93L106.20 41.86Q105.99 42.84 105.19 44.36L105.13 44.30L105.21 44.37Q107.99 43.35 110.24 42.94L110.19 42.89L110.19 42.89Q112.07 37.34 112.26 31.17L112.23 31.14L112.30 31.21Q113.87 31.11 117.07 31.07L116.95 30.96L117.01 31.02Q119.88 30.99 121.78 31.06L121.86 31.15L121.89 31.17Q121.98 36.74 123.31 40.66Z"/></svg>`}} />

        // return <svg xmlns="http://www.w3.org/2000/svg" width="150" height="50"><path d="M2 9 C71 13,82 17,143 35" stroke="#555" fill="none"/><path fill="#222" d="M29.61 39.83L29.71 39.94L29.55 39.78Q27.76 39.89 25.74 40.08L25.76 40.10L25.59 39.93Q26.39 34.83 26.39 30.00L26.32 29.92L26.28 29.88Q26.26 24.95 25.61 19.73L25.72 19.84L25.64 19.76Q21.01 19.32 17.81 17.64L17.82 17.65L17.08 15.88L17.11 15.92Q16.93 15.44 16.33 14.22L16.38 14.27L16.46 14.36Q21.51 17.01 27.53 17.20L27.48 17.15L27.47 17.14Q33.31 17.27 38.75 15.21L38.85 15.31L38.72 15.18Q38.12 16.72 37.48 18.54L37.50 18.56L37.37 18.44Q33.82 19.80 29.56 19.99L29.59 20.02L29.61 20.05Q29.37 25.02 29.37 29.97L29.32 29.92L29.37 29.97Q29.23 34.78 29.54 39.77ZM39.48 14.57L39.37 14.46L39.52 14.61Q33.64 16.84 27.43 16.65L27.48 16.69L27.39 16.61Q20.79 16.47 15.69 13.50L15.70 13.52L15.75 13.56Q16.42 14.77 17.71 18.04L17.63 17.96L17.67 18.00Q18.38 18.37 19.64 18.94L19.68 18.98L19.69 18.99Q19.92 19.68 20.26 21.20L20.18 21.12L20.25 21.19Q22.42 21.92 25.47 22.14L25.52 22.19L25.64 22.31Q25.99 25.97 25.99 29.74L25.97 29.73L25.97 29.72Q25.88 35.01 25.08 40.37L25.14 40.43L25.09 40.38Q26.87 40.38 27.41 40.38L27.42 40.39L27.43 40.40Q27.24 40.52 27.19 41.18L27.26 41.25L27.27 41.27Q27.20 41.92 27.20 42.26L27.15 42.22L27.22 42.28Q28.40 42.20 29.92 42.28L30.00 42.36L29.91 42.27Q30.91 42.40 32.74 42.55L32.61 42.42L32.72 42.53Q31.40 37.52 31.29 32.34L31.40 32.45L31.24 32.29Q31.10 26.98 31.63 22.07L31.70 22.13L31.70 22.13Q35.61 21.55 38.77 20.34L38.84 20.40L38.89 20.45Q39.60 18.08 40.63 16.02L40.64 16.03L40.62 16.02Q39.20 16.61 38.40 16.91L38.43 16.95L38.33 16.84Q38.96 15.76 39.53 14.62Z"/><path fill="#222" d="M83.17 19.39L83.14 19.36L83.08 19.30Q84.01 23.62 84.16 27.20L84.14 27.17L84.22 27.25Q85.31 27.31 86.37 27.31L86.23 27.17L88.42 27.16L88.56 27.29Q89.53 27.20 90.41 25.79L90.35 25.73L90.51 25.90Q91.17 24.65 91.29 23.47L91.24 23.42L91.22 23.40Q91.62 20.42 87.39 19.92L87.49 20.01L87.34 19.87Q85.84 20.00 83.21 19.43ZM84.17 29.95L84.17 29.94L84.23 30.01Q84.13 36.19 82.99 40.60L82.86 40.47L83.03 40.65Q81.54 41.02 79.22 42.09L79.26 42.13L79.16 42.03Q81.51 35.35 81.24 28.08L81.24 28.08L81.37 28.21Q81.00 20.76 78.22 14.33L78.19 14.29L78.11 14.22Q82.40 17.13 88.64 17.13L88.56 17.05L88.63 17.12Q94.61 17.05 94.76 20.51L94.77 20.52L94.72 20.47Q94.90 23.01 93.91 25.67L93.88 25.64L93.81 25.57Q93.45 26.74 92.50 27.96L92.48 27.94L92.51 27.97Q91.13 29.52 88.58 29.79L88.59 29.79L88.70 29.90Q86.51 30.00 84.27 30.04ZM90.39 32.29L90.25 32.15L90.30 32.19Q94.39 32.36 95.65 27.57L95.78 27.70L95.61 27.53Q96.65 23.96 96.49 21.94L96.53 21.98L96.48 21.92Q96.45 20.49 95.69 19.50L95.69 19.50L95.63 19.44Q95.19 19.00 94.70 18.77L94.77 18.85L94.76 18.83Q94.77 18.69 94.16 17.93L94.16 17.93L94.15 17.92Q92.68 16.67 88.72 16.67L88.68 16.64L88.63 16.59Q81.71 16.56 77.49 13.40L77.64 13.56L77.49 13.41Q80.65 20.49 80.92 27.95L80.89 27.92L81.00 28.03Q81.22 35.63 78.55 42.71L78.60 42.76L78.71 42.88Q79.68 42.13 80.67 41.75L80.74 41.81L80.25 42.85L80.32 42.92Q80.02 43.38 79.75 43.95L79.77 43.97L79.85 44.05Q82.26 42.99 85.15 42.46L85.23 42.54L85.25 42.56Q86.02 36.97 86.10 32.25L85.99 32.14L86.11 32.27Q87.18 32.16 88.17 32.16L88.19 32.17L88.23 32.22Q89.50 32.16 90.30 32.19ZM89.30 22.21L89.32 22.23L89.31 22.21Q89.92 22.34 90.91 22.57L90.90 22.55L90.91 22.57Q90.94 22.71 90.98 23.01L90.95 22.98L90.95 22.99Q91.01 23.26 90.93 23.53L90.87 23.47L90.90 23.50Q90.83 24.77 90.11 25.64L90.12 25.66L90.13 25.67Q89.54 26.71 88.52 26.90L88.56 26.95L88.56 26.95Q87.83 26.94 86.19 26.94L86.02 26.77L86.07 26.81Q86.08 24.58 85.85 22.22L85.91 22.29L87.66 22.36L87.53 22.23Q88.50 22.36 89.38 22.28Z"/><path fill="#222" d="M57.81 40.13L57.79 40.11L57.78 40.11Q56.08 40.19 54.40 40.76L54.38 40.74L54.27 40.63Q54.96 37.16 55.07 34.04L54.93 33.91L55.03 34.00Q55.12 30.93 54.89 27.27L54.93 27.31L54.79 27.18Q53.39 26.80 52.62 26.42L52.76 26.56L52.39 23.55L52.33 23.50Q53.10 24.16 54.70 24.73L54.58 24.61L54.59 24.61Q54.46 22.58 54.04 19.84L54.00 19.80L53.97 19.77Q56.38 20.58 58.02 20.43L57.89 20.30L57.82 24.96L57.87 25.01Q59.15 24.80 60.49 24.31L60.65 24.47L60.62 24.44Q60.46 25.23 60.23 26.98L60.27 27.02L60.34 27.09Q58.80 27.41 57.77 27.41L57.76 27.41L57.68 27.32Q57.83 29.64 57.83 33.91L57.69 33.77L57.73 33.81Q57.79 38.02 57.87 40.19ZM60.91 23.74L61.02 23.85L60.90 23.73Q60.70 23.91 60.09 24.14L60.13 24.18L60.42 21.31L60.46 21.35Q59.60 21.59 58.19 21.82L58.27 21.90L58.21 21.84Q58.35 21.29 58.50 19.92L58.36 19.79L58.46 19.88Q57.88 19.99 57.31 19.99L57.24 19.92L57.27 19.94Q55.14 19.95 53.51 19.23L53.52 19.24L53.49 19.21Q54.05 21.75 54.32 24.23L54.28 24.19L54.32 24.24Q53.32 23.77 51.80 22.74L51.95 22.89L51.76 22.70Q52.28 24.18 52.51 26.88L52.35 26.71L52.38 26.75Q52.83 26.97 54.01 27.39L53.99 27.36L54.15 27.52Q54.15 28.14 54.19 29.55L54.08 29.44L54.53 29.54L54.69 29.62L54.56 29.50Q54.61 30.73 54.61 31.91L54.74 32.03L54.64 31.94Q54.63 36.88 53.83 41.22L53.83 41.21L53.91 41.29Q54.03 41.11 55.97 40.58L55.94 40.54L55.95 40.56Q55.98 41.23 55.86 42.60L55.89 42.63L55.96 42.70Q56.73 42.59 57.53 42.59L57.43 42.49L57.59 42.65Q59.17 42.52 60.81 43.10L60.89 43.17L60.80 43.08Q59.55 37.45 59.74 29.53L59.74 29.54L62.11 29.13L62.15 29.17Q62.14 28.17 62.22 27.14L62.30 27.22L62.51 25.23L62.48 25.19Q61.84 25.40 60.66 25.85L60.78 25.97L60.82 26.01Q61.04 24.60 60.97 24.25L61.02 24.31L60.98 24.27Q60.90 24.00 60.98 23.81Z"/><path fill="#333" d="M122.09 28.67L122.19 28.77L116.15 28.71L116.23 28.79Q113.21 28.74 110.28 28.66L110.36 28.74L110.44 28.83Q110.54 35.51 108.48 41.03L108.39 40.94L108.37 40.92Q106.51 41.38 104.76 42.06L104.77 42.08L104.89 42.19Q107.55 36.36 107.55 29.70L107.68 29.83L107.67 29.83Q107.61 21.27 103.50 14.23L103.48 14.22L103.47 14.20Q104.92 14.93 107.39 15.73L107.54 15.87L107.47 15.80Q109.58 20.85 110.12 25.72L110.07 25.68L110.19 25.79Q113.42 26.25 116.28 26.21L116.26 26.19L116.23 26.16Q118.96 26.22 122.27 25.96L122.13 25.82L122.09 25.78Q122.61 21.43 124.37 16.33L124.49 16.45L124.49 16.45Q126.24 15.84 128.49 15.01L128.61 15.13L128.53 15.04Q125.01 21.88 125.01 29.84L125.04 29.87L124.92 29.75Q125.01 36.04 127.37 41.37L127.39 41.40L127.27 41.27Q125.63 40.63 123.58 40.32L123.64 40.39L123.69 40.43Q121.96 35.35 122.07 28.65ZM123.37 40.72L123.48 40.84L123.42 40.77Q124.51 40.99 125.62 41.26L125.56 41.20L125.56 41.20Q125.95 41.98 126.60 43.46L126.61 43.47L126.43 43.29Q129.88 44.35 131.67 45.26L131.67 45.25L131.60 45.18Q127.15 39.02 126.84 30.76L126.94 30.85L126.93 30.84Q126.65 22.84 130.30 16.02L130.33 16.05L129.14 16.38L129.24 16.48Q128.79 16.75 128.18 16.90L128.16 16.88L128.05 16.78Q128.47 15.98 129.31 14.42L129.32 14.43L129.32 14.43Q126.68 15.48 124.05 15.97L124.11 16.04L124.11 16.03Q122.34 20.77 121.88 25.46L121.96 25.53L121.97 25.54Q119.44 25.72 117.00 25.72L117.10 25.81L117.09 25.80Q114.58 25.69 112.07 25.54L112.01 25.48L112.10 25.57Q111.81 22.24 110.71 18.17L110.86 18.31L110.86 18.31Q110.05 18.07 108.60 17.69L108.58 17.67L108.66 17.76Q108.26 16.51 107.80 15.48L107.84 15.52L107.71 15.40Q105.14 14.80 102.85 13.54L102.75 13.45L102.82 13.52Q107.40 20.94 107.40 29.74L107.37 29.72L107.41 29.75Q107.40 36.71 104.28 42.84L104.30 42.86L104.13 42.69Q104.87 42.44 106.20 41.87L106.26 41.93L106.20 41.86Q105.99 42.84 105.19 44.36L105.13 44.30L105.21 44.37Q107.99 43.35 110.24 42.94L110.19 42.89L110.19 42.89Q112.07 37.34 112.26 31.17L112.23 31.14L112.30 31.21Q113.87 31.11 117.07 31.07L116.95 30.96L117.01 31.02Q119.88 30.99 121.78 31.06L121.86 31.15L121.89 31.17Q121.98 36.74 123.31 40.66Z"/></svg>

        {/*<img onClick={(e) => {*/}
            {/*e.target.src = 'http://47.91.236.245:4030/user/image-captcha?tm=' + Math.random()*/}
        {/*}}*/}
                    {/*className={style.authCode}*/}
                    {/*src={"http://47.91.236.245:4030/user/image-captcha?tm=" + Math.random()}/>*/}
    }

    render() {
        const {getFieldDecorator, getFieldError, getFieldValue} = this.props.form;

        return (
            <div className={style.wrap}>
                <Modal
                    visible={this.state.visible}
                    onOk={this.hideModal}
                    onCancel={this.hideModal}
                    okText="确认"
                    cancelText="取消"
                    width="520"
                >

                    <Form onSubmit={this.handleSubmit}>
                        <div className={style.content}>
                        <span className={style.llctitle}>
                            注册海豚汇账号
                        </span>
                            <div className={style.perselphone}>
                                <div className={style.selphone}>
                                    <div className={style.qh}>
                                        <Select value={this.state.areaCode} size={'large'}
                                                style={{width: 80, height: 40, lineHeight: 40,}} onChange={(value) => {
                                            this.setState({areaCode: value})
                                        }} dropdownStyle={{width: '520'}}>
                                            <Option value="86">+86</Option>
                                            <Option value="87">+87</Option>
                                            <Option value="88">+88</Option>
                                        </Select>
                                    </div>
                                    <div className={style.phone}>
                                        <FormItem>{getFieldDecorator('phone', {
                                            rules: [{
                                                required: true,
                                                message: '请输入正确格式的手机号码!',
                                                pattern: /^(((13[0-9]{1})|(15[0-9]{1})|(18[0-9]{1}))+\d{8})$/
                                            }],
                                        })(<div>
                                            <Input onChange={
                                                (e) => {
                                                    this.setState({phone: e.target.value})
                                                }
                                            }
                                                   className={style.inputp}
                                                   placeholder="手机号"/></div>
                                        )}
                                        </FormItem>
                                    </div>
                                </div>
                                <div className={style.tuxing}>
                                    {/*<img className={style.authCode}*/}
                                    {/*src="https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1508392689327&di=de9f7dd0fb15a19b677b80a6e88956f2&imgtype=0&src=http%3A%2F%2Fimages2015.cnblogs.com%2Fblog%2F875028%2F201605%2F875028-20160513234811280-1452474757.png"*/}
                                    {/*alt=""/>*/}
                                    {this.state.picImg}
                                    <FormItem>{getFieldDecorator('authCode', {
                                        rules: [{required: true, message: '请输入正确格式的验证码!'}],
                                    })(<div>
                                        <Input onChange={
                                            (e) => {
                                                this.setState({authCode: e.target.value})
                                            }
                                        }
                                               className={style.inputp}
                                               placeholder="请输入图形验证码"/></div>
                                    )}
                                    </FormItem>
                                </div>
                                <div className={style.tuxing}>
                                    <FormItem>{getFieldDecorator('code', {
                                        rules: [{
                                            required: true,
                                            message: '请输入短信验证码!'
                                        }],
                                    })(
                                        <div>
                                            <Countdown
                                                beforeClick={() => {
                                                    return this.checkPhone(getFieldError, getFieldValue)
                                                }}
                                                phone={this.state.phone}
                                                picCode={this.state.authCode}
                                                business='REGISTER'
                                                failCallback={() => {
                                                    this.setState({picImg: this.getPicImg()})
                                                }}
                                                type="small"
                                                onChange={(e) => {
                                                    this.setState({code: e.target.value})
                                                }}
                                            />
                                        </div>
                                    )
                                    }
                                    </FormItem>
                                </div>
                                <div className={style.tuxing}>
                                    <FormItem>{getFieldDecorator('password', {
                                        rules: [{
                                            required: true,
                                            message: '请输入正确格式的密码!',
                                            pattern: /^(?![0-9]+$)(?![a-zA-Z]+$)[0-9A-Za-z]{6,21}$/
                                        }],
                                    })(<div>
                                        <Input onChange={
                                            (e) => {
                                                this.setState({password: e.target.value})
                                            }} className={style.inputp} placeholder="密码6-24位字母、数字、字符"
                                               type={'password'}/></div>
                                    )}
                                    </FormItem>
                                </div>
                                <div className={style.tuxing}>
                                    <FormItem
                                        hasFeedback
                                    >
                                        {getFieldDecorator('confirm', {
                                            rules: [{
                                                required: true, message: '请检查你的密码!',
                                            }, {
                                                validator: this.checkPassword,
                                            }],
                                        })(
                                            <Input
                                                type="password"
                                                className={style.inputp}
                                                onChange={
                                                    (e) => {
                                                        this.setState({confirm: e.target.value})
                                                    }
                                                }
                                                onBlur={this.handleConfirmBlur}
                                                placeholder="请再次输入密码"/>
                                        )}
                                    </FormItem>
                                </div>
                                <FormItem>
                                    <Button type="primary" htmlType="submit"
                                            style={{width: '100%', height: 40, marginTop: 20}}>完成注册并登录</Button>
                                </FormItem>

                                <div className={style.toggletab}>
                                    <a onClick={() => {
                                        this.props.showLogin()
                                    }} className={style.reg} href="javascript:void (0)">立即登录</a>
                                    <span className={style.noacc}>
                                    已有账户、
                                </span>
                                </div>
                            </div>
                        </div>
                    </Form>
                </Modal>
            </div>
        )

    }
}

function mapStateToProps(state, props) {
    return {}
}

function mapDispatchToProps(dispatch) {
    return {
        hideAuth: bindActionCreators(hideAuth, dispatch),
        register: bindActionCreators(register, dispatch),
        showLogin: bindActionCreators(showLogin, dispatch)
    }
}

RegisterBox = connect(mapStateToProps, mapDispatchToProps)(RegisterBox)
const WrappedRegisterBox = Form.create()(RegisterBox)

export default WrappedRegisterBox;
